replicaCount: 2

image:
  repository: 230367374156.dkr.ecr.us-east-1.amazonaws.com/platform-services
  tag: ${{values.component_id}}-server
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 512Mi

annotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "${{values.http_port}}"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/team: "${{values.owner}}"
  prometheus.io/product: upper "${{values.component_id}}_SERVICE"
  prometheus.io/service: upper "${{values.component_id}}_SERVER"
  prometheus.io/env: "PRODUCTION"
  #  Please update below value --->>>
  miq.io/javautils-webhook-s3-path: "s3://miq-techbrew/services/dumps/${{values.component_id}}/production"
  vault.hashicorp.com/agent-pre-populate-only: "true"
  vault.hashicorp.com/auth-path: "auth/kubernetes-prod"
  vault.hashicorp.com/role: "pt-${{values.component_id}}-server-production"
  #  Please update below value --->>>
  vault.hashicorp.com/agent-inject-secret-secrets.properties: "Platform-Vault-Kubernetes/data/${{values.component_id}}-server-production"
  vault.hashicorp.com/agent-inject-template-secrets.properties: |
    {{- with secret "Platform-Vault-Kubernetes/data/${{values.component_id}}-server-production" }}
      {{ range $k, $v := .Data.data }}
      {{- $k }}={{ $v }}
      {{ end }}
    {{- end }}

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                values:
                  - ${{values.component_id}}-server-production
          topologyKey: "failure-domain.beta.kubernetes.io/zone"

timestamp: A100

config:
  spring:
    application:
      name: ${{values.component_id}}-server-production

istio:
  enabled: false
  namespace: pt-${{values.component_id}}-production
  #  make sure to add this host in gateway
  host: ${{values.component_id}}.prod.miqdigital.com
  gateway: pt-${{values.component_id}}-production/${{values.component_id}}-production-istio-gw
  destinationHost: ${{values.component_id}}-production
  destinationPort: 80
